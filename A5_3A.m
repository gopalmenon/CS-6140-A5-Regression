# Return ordinary least squares regression solution coefficientsfunction [ols_coeffs] = get_ols_solution_coeffs(X, Y)  ols_coeffs = inverse(X' * X)*X'*Y;end# Return ridge regression solution coefficientsfunction [ridge_regression_coeffs] = get_ridge_regression_coeffs(X, Y, s)  ridge_regression_coeffs = inverse(X'*X + s^2*eye(size(X)(2)))*X'*Y;end# Return the regression errorfunction [regression_error] = get_regression_error(X, Y, regression_coeffs)  regression_error = norm(Y - X*regression_coeffs, 2);end # Run regression with x-validationfunction run_regression_x_validation(subset_number, X1, Y1, remaining_x, remaining_y, s)  # Run ordinary least squares regression  ols_coeffs = get_ols_solution_coeffs(X1, Y1);  # Report OLS regression error  printf("3B.%d. OLS Regression error is %f\n", subset_number, get_regression_error(remaining_x, remaining_y, ols_coeffs));  # Run ridge regression for each value of s and report error  for regularizer_index = 1:size(s)(2)    ridge_regression_coeffs = get_ridge_regression_coeffs(X1, Y1, s(1, regularizer_index));    printf("3B.%d. Ridge Regression error for regularizer value %f is %f\n", subset_number, s(1, regularizer_index), get_regression_error(remaining_x, remaining_y, ridge_regression_coeffs));  endforend s = [0.1, 0.3, 0.5, 1.0, 2.0];# Load the data from fileload('X.dat');load('Y.dat');# Change X for including the bias termX(:, end+1) = ones(size(X)(1),1);# Run ordinary least squares regressionols_coeffs = get_ols_solution_coeffs(X, Y);# Report OLS regression errorprintf("OLS Regression error is %f\n", get_regression_error(X, Y, ols_coeffs));# Run ridge regression for each value of s and report errorfor regularizer_index = 1:size(s)(2)  ridge_regression_coeffs = get_ridge_regression_coeffs(X, Y, s(1, regularizer_index));  printf("Ridge Regression error for regularizer value %f is %f\n", s(1, regularizer_index), get_regression_error(X, Y, ridge_regression_coeffs));endfor# Run regression 1 with cross validationX1 = X(1:66,:);remaining_x = X(67:end,:);Y1 = Y(1:66);remaining_y = Y(67:end);run_regression_x_validation(1, X1, Y1, remaining_x, remaining_y, s);# Run regression 2 with cross validationX2 = X(34:100,:);remaining_x = X(1:33,:);Y2 = Y(34:100);remaining_y = Y(1:33);run_regression_x_validation(2, X2, Y2, remaining_x, remaining_y, s);# Run regression 3 with cross validationX3 = [X(1:33,:); X(67:100,:)];remaining_x = X(34:66,:);Y3 = [Y(1:33); Y(67:100)];remaining_y = Y(34:66);run_regression_x_validation(3, X3, Y3, remaining_x, remaining_y, s);